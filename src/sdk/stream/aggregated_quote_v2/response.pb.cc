// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/stream/aggregated_quote_v2/response.proto

#include "sdk/stream/aggregated_quote_v2/response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kaikosdk {
PROTOBUF_CONSTEXPR StreamAggregatedQuoteValue::StreamAggregatedQuoteValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.price_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.volume_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamAggregatedQuoteValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamAggregatedQuoteValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamAggregatedQuoteValueDefaultTypeInternal() {}
  union {
    StreamAggregatedQuoteValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamAggregatedQuoteValueDefaultTypeInternal _StreamAggregatedQuoteValue_default_instance_;
PROTOBUF_CONSTEXPR StreamAggregatedQuoteResponseV2::StreamAggregatedQuoteResponseV2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.aggregate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.instrument_class_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ts_event_)*/nullptr
  , /*decltype(_impl_.vetted_)*/nullptr
  , /*decltype(_impl_.unvetted_)*/nullptr
  , /*decltype(_impl_.event_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamAggregatedQuoteResponseV2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamAggregatedQuoteResponseV2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamAggregatedQuoteResponseV2DefaultTypeInternal() {}
  union {
    StreamAggregatedQuoteResponseV2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamAggregatedQuoteResponseV2DefaultTypeInternal _StreamAggregatedQuoteResponseV2_default_instance_;
}  // namespace kaikosdk
static ::_pb::Metadata file_level_metadata_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto = nullptr;

const uint32_t TableStruct_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteValue, _impl_.price_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteValue, _impl_.volume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.aggregate_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.instrument_class_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.event_type_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.ts_event_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.vetted_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamAggregatedQuoteResponseV2, _impl_.unvetted_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::kaikosdk::StreamAggregatedQuoteValue)},
  { 8, -1, -1, sizeof(::kaikosdk::StreamAggregatedQuoteResponseV2)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::kaikosdk::_StreamAggregatedQuoteValue_default_instance_._instance,
  &::kaikosdk::_StreamAggregatedQuoteResponseV2_default_instance_._instance,
};

const char descriptor_table_protodef_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-sdk/stream/aggregated_quote_v2/respons"
  "e.proto\022\010kaikosdk\032\037google/protobuf/times"
  "tamp.proto\";\n\032StreamAggregatedQuoteValue"
  "\022\r\n\005price\030\001 \001(\t\022\016\n\006volume\030\002 \001(\t\"\367\002\n\037Stre"
  "amAggregatedQuoteResponseV2\022\021\n\taggregate"
  "\030\001 \001(\t\022\030\n\020instrument_class\030\002 \001(\t\022\014\n\004code"
  "\030\003 \001(\t\022G\n\nevent_type\030\004 \001(\01623.kaikosdk.St"
  "reamAggregatedQuoteResponseV2.EventType\022"
  ",\n\010ts_event\030\005 \001(\0132\032.google.protobuf.Time"
  "stamp\0224\n\006vetted\030\006 \001(\0132$.kaikosdk.StreamA"
  "ggregatedQuoteValue\0226\n\010unvetted\030\007 \001(\0132$."
  "kaikosdk.StreamAggregatedQuoteValue\"4\n\tE"
  "ventType\022\013\n\007UNKNOWN\020\000\022\014\n\010BEST_ASK\020\001\022\014\n\010B"
  "EST_BID\020\002B\242\001\n(com.kaiko.sdk.stream.aggre"
  "gated_quote_v2P\001ZPgithub.com/kaikodata/k"
  "aiko-go-sdk/stream/aggregated_quote_v2;a"
  "ggregated_quote_v2\252\002!KaikoSdk.Stream.Agg"
  "regatedQuoteV2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto = {
    false, false, 702, descriptor_table_protodef_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto,
    "sdk/stream/aggregated_quote_v2/response.proto",
    &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_once, descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto::offsets,
    file_level_metadata_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto, file_level_enum_descriptors_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto,
    file_level_service_descriptors_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_getter() {
  return &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto(&descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto);
namespace kaikosdk {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StreamAggregatedQuoteResponseV2_EventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto);
  return file_level_enum_descriptors_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[0];
}
bool StreamAggregatedQuoteResponseV2_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr StreamAggregatedQuoteResponseV2_EventType StreamAggregatedQuoteResponseV2::UNKNOWN;
constexpr StreamAggregatedQuoteResponseV2_EventType StreamAggregatedQuoteResponseV2::BEST_ASK;
constexpr StreamAggregatedQuoteResponseV2_EventType StreamAggregatedQuoteResponseV2::BEST_BID;
constexpr StreamAggregatedQuoteResponseV2_EventType StreamAggregatedQuoteResponseV2::EventType_MIN;
constexpr StreamAggregatedQuoteResponseV2_EventType StreamAggregatedQuoteResponseV2::EventType_MAX;
constexpr int StreamAggregatedQuoteResponseV2::EventType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class StreamAggregatedQuoteValue::_Internal {
 public:
};

StreamAggregatedQuoteValue::StreamAggregatedQuoteValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kaikosdk.StreamAggregatedQuoteValue)
}
StreamAggregatedQuoteValue::StreamAggregatedQuoteValue(const StreamAggregatedQuoteValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamAggregatedQuoteValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){}
    , decltype(_impl_.volume_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.price_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_price().empty()) {
    _this->_impl_.price_.Set(from._internal_price(), 
      _this->GetArenaForAllocation());
  }
  _impl_.volume_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.volume_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_volume().empty()) {
    _this->_impl_.volume_.Set(from._internal_volume(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:kaikosdk.StreamAggregatedQuoteValue)
}

inline void StreamAggregatedQuoteValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){}
    , decltype(_impl_.volume_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.price_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.volume_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.volume_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamAggregatedQuoteValue::~StreamAggregatedQuoteValue() {
  // @@protoc_insertion_point(destructor:kaikosdk.StreamAggregatedQuoteValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamAggregatedQuoteValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.price_.Destroy();
  _impl_.volume_.Destroy();
}

void StreamAggregatedQuoteValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamAggregatedQuoteValue::Clear() {
// @@protoc_insertion_point(message_clear_start:kaikosdk.StreamAggregatedQuoteValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_.ClearToEmpty();
  _impl_.volume_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamAggregatedQuoteValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string price = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_price();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamAggregatedQuoteValue.price"));
        } else
          goto handle_unusual;
        continue;
      // string volume = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_volume();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamAggregatedQuoteValue.volume"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamAggregatedQuoteValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaikosdk.StreamAggregatedQuoteValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string price = 1;
  if (!this->_internal_price().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_price().data(), static_cast<int>(this->_internal_price().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamAggregatedQuoteValue.price");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_price(), target);
  }

  // string volume = 2;
  if (!this->_internal_volume().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volume().data(), static_cast<int>(this->_internal_volume().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamAggregatedQuoteValue.volume");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_volume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaikosdk.StreamAggregatedQuoteValue)
  return target;
}

size_t StreamAggregatedQuoteValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaikosdk.StreamAggregatedQuoteValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string price = 1;
  if (!this->_internal_price().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_price());
  }

  // string volume = 2;
  if (!this->_internal_volume().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamAggregatedQuoteValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamAggregatedQuoteValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamAggregatedQuoteValue::GetClassData() const { return &_class_data_; }


void StreamAggregatedQuoteValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamAggregatedQuoteValue*>(&to_msg);
  auto& from = static_cast<const StreamAggregatedQuoteValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kaikosdk.StreamAggregatedQuoteValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_price().empty()) {
    _this->_internal_set_price(from._internal_price());
  }
  if (!from._internal_volume().empty()) {
    _this->_internal_set_volume(from._internal_volume());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamAggregatedQuoteValue::CopyFrom(const StreamAggregatedQuoteValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaikosdk.StreamAggregatedQuoteValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamAggregatedQuoteValue::IsInitialized() const {
  return true;
}

void StreamAggregatedQuoteValue::InternalSwap(StreamAggregatedQuoteValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.price_, lhs_arena,
      &other->_impl_.price_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.volume_, lhs_arena,
      &other->_impl_.volume_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamAggregatedQuoteValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_getter, &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_once,
      file_level_metadata_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[0]);
}

// ===================================================================

class StreamAggregatedQuoteResponseV2::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& ts_event(const StreamAggregatedQuoteResponseV2* msg);
  static const ::kaikosdk::StreamAggregatedQuoteValue& vetted(const StreamAggregatedQuoteResponseV2* msg);
  static const ::kaikosdk::StreamAggregatedQuoteValue& unvetted(const StreamAggregatedQuoteResponseV2* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
StreamAggregatedQuoteResponseV2::_Internal::ts_event(const StreamAggregatedQuoteResponseV2* msg) {
  return *msg->_impl_.ts_event_;
}
const ::kaikosdk::StreamAggregatedQuoteValue&
StreamAggregatedQuoteResponseV2::_Internal::vetted(const StreamAggregatedQuoteResponseV2* msg) {
  return *msg->_impl_.vetted_;
}
const ::kaikosdk::StreamAggregatedQuoteValue&
StreamAggregatedQuoteResponseV2::_Internal::unvetted(const StreamAggregatedQuoteResponseV2* msg) {
  return *msg->_impl_.unvetted_;
}
void StreamAggregatedQuoteResponseV2::clear_ts_event() {
  if (GetArenaForAllocation() == nullptr && _impl_.ts_event_ != nullptr) {
    delete _impl_.ts_event_;
  }
  _impl_.ts_event_ = nullptr;
}
StreamAggregatedQuoteResponseV2::StreamAggregatedQuoteResponseV2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kaikosdk.StreamAggregatedQuoteResponseV2)
}
StreamAggregatedQuoteResponseV2::StreamAggregatedQuoteResponseV2(const StreamAggregatedQuoteResponseV2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamAggregatedQuoteResponseV2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.aggregate_){}
    , decltype(_impl_.instrument_class_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.ts_event_){nullptr}
    , decltype(_impl_.vetted_){nullptr}
    , decltype(_impl_.unvetted_){nullptr}
    , decltype(_impl_.event_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.aggregate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.aggregate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_aggregate().empty()) {
    _this->_impl_.aggregate_.Set(from._internal_aggregate(), 
      _this->GetArenaForAllocation());
  }
  _impl_.instrument_class_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instrument_class_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instrument_class().empty()) {
    _this->_impl_.instrument_class_.Set(from._internal_instrument_class(), 
      _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_ts_event()) {
    _this->_impl_.ts_event_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.ts_event_);
  }
  if (from._internal_has_vetted()) {
    _this->_impl_.vetted_ = new ::kaikosdk::StreamAggregatedQuoteValue(*from._impl_.vetted_);
  }
  if (from._internal_has_unvetted()) {
    _this->_impl_.unvetted_ = new ::kaikosdk::StreamAggregatedQuoteValue(*from._impl_.unvetted_);
  }
  _this->_impl_.event_type_ = from._impl_.event_type_;
  // @@protoc_insertion_point(copy_constructor:kaikosdk.StreamAggregatedQuoteResponseV2)
}

inline void StreamAggregatedQuoteResponseV2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.aggregate_){}
    , decltype(_impl_.instrument_class_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.ts_event_){nullptr}
    , decltype(_impl_.vetted_){nullptr}
    , decltype(_impl_.unvetted_){nullptr}
    , decltype(_impl_.event_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.aggregate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.aggregate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.instrument_class_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instrument_class_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamAggregatedQuoteResponseV2::~StreamAggregatedQuoteResponseV2() {
  // @@protoc_insertion_point(destructor:kaikosdk.StreamAggregatedQuoteResponseV2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamAggregatedQuoteResponseV2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.aggregate_.Destroy();
  _impl_.instrument_class_.Destroy();
  _impl_.code_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ts_event_;
  if (this != internal_default_instance()) delete _impl_.vetted_;
  if (this != internal_default_instance()) delete _impl_.unvetted_;
}

void StreamAggregatedQuoteResponseV2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamAggregatedQuoteResponseV2::Clear() {
// @@protoc_insertion_point(message_clear_start:kaikosdk.StreamAggregatedQuoteResponseV2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.aggregate_.ClearToEmpty();
  _impl_.instrument_class_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.ts_event_ != nullptr) {
    delete _impl_.ts_event_;
  }
  _impl_.ts_event_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.vetted_ != nullptr) {
    delete _impl_.vetted_;
  }
  _impl_.vetted_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.unvetted_ != nullptr) {
    delete _impl_.unvetted_;
  }
  _impl_.unvetted_ = nullptr;
  _impl_.event_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamAggregatedQuoteResponseV2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string aggregate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_aggregate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamAggregatedQuoteResponseV2.aggregate"));
        } else
          goto handle_unusual;
        continue;
      // string instrument_class = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_instrument_class();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamAggregatedQuoteResponseV2.instrument_class"));
        } else
          goto handle_unusual;
        continue;
      // string code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamAggregatedQuoteResponseV2.code"));
        } else
          goto handle_unusual;
        continue;
      // .kaikosdk.StreamAggregatedQuoteResponseV2.EventType event_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_event_type(static_cast<::kaikosdk::StreamAggregatedQuoteResponseV2_EventType>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp ts_event = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_ts_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .kaikosdk.StreamAggregatedQuoteValue vetted = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_vetted(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .kaikosdk.StreamAggregatedQuoteValue unvetted = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_unvetted(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamAggregatedQuoteResponseV2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaikosdk.StreamAggregatedQuoteResponseV2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string aggregate = 1;
  if (!this->_internal_aggregate().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_aggregate().data(), static_cast<int>(this->_internal_aggregate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamAggregatedQuoteResponseV2.aggregate");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_aggregate(), target);
  }

  // string instrument_class = 2;
  if (!this->_internal_instrument_class().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instrument_class().data(), static_cast<int>(this->_internal_instrument_class().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamAggregatedQuoteResponseV2.instrument_class");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_instrument_class(), target);
  }

  // string code = 3;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamAggregatedQuoteResponseV2.code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_code(), target);
  }

  // .kaikosdk.StreamAggregatedQuoteResponseV2.EventType event_type = 4;
  if (this->_internal_event_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_event_type(), target);
  }

  // .google.protobuf.Timestamp ts_event = 5;
  if (this->_internal_has_ts_event()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::ts_event(this),
        _Internal::ts_event(this).GetCachedSize(), target, stream);
  }

  // .kaikosdk.StreamAggregatedQuoteValue vetted = 6;
  if (this->_internal_has_vetted()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::vetted(this),
        _Internal::vetted(this).GetCachedSize(), target, stream);
  }

  // .kaikosdk.StreamAggregatedQuoteValue unvetted = 7;
  if (this->_internal_has_unvetted()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::unvetted(this),
        _Internal::unvetted(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaikosdk.StreamAggregatedQuoteResponseV2)
  return target;
}

size_t StreamAggregatedQuoteResponseV2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaikosdk.StreamAggregatedQuoteResponseV2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string aggregate = 1;
  if (!this->_internal_aggregate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_aggregate());
  }

  // string instrument_class = 2;
  if (!this->_internal_instrument_class().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instrument_class());
  }

  // string code = 3;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // .google.protobuf.Timestamp ts_event = 5;
  if (this->_internal_has_ts_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.ts_event_);
  }

  // .kaikosdk.StreamAggregatedQuoteValue vetted = 6;
  if (this->_internal_has_vetted()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.vetted_);
  }

  // .kaikosdk.StreamAggregatedQuoteValue unvetted = 7;
  if (this->_internal_has_unvetted()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.unvetted_);
  }

  // .kaikosdk.StreamAggregatedQuoteResponseV2.EventType event_type = 4;
  if (this->_internal_event_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_event_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamAggregatedQuoteResponseV2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamAggregatedQuoteResponseV2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamAggregatedQuoteResponseV2::GetClassData() const { return &_class_data_; }


void StreamAggregatedQuoteResponseV2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamAggregatedQuoteResponseV2*>(&to_msg);
  auto& from = static_cast<const StreamAggregatedQuoteResponseV2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kaikosdk.StreamAggregatedQuoteResponseV2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_aggregate().empty()) {
    _this->_internal_set_aggregate(from._internal_aggregate());
  }
  if (!from._internal_instrument_class().empty()) {
    _this->_internal_set_instrument_class(from._internal_instrument_class());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (from._internal_has_ts_event()) {
    _this->_internal_mutable_ts_event()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_ts_event());
  }
  if (from._internal_has_vetted()) {
    _this->_internal_mutable_vetted()->::kaikosdk::StreamAggregatedQuoteValue::MergeFrom(
        from._internal_vetted());
  }
  if (from._internal_has_unvetted()) {
    _this->_internal_mutable_unvetted()->::kaikosdk::StreamAggregatedQuoteValue::MergeFrom(
        from._internal_unvetted());
  }
  if (from._internal_event_type() != 0) {
    _this->_internal_set_event_type(from._internal_event_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamAggregatedQuoteResponseV2::CopyFrom(const StreamAggregatedQuoteResponseV2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaikosdk.StreamAggregatedQuoteResponseV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamAggregatedQuoteResponseV2::IsInitialized() const {
  return true;
}

void StreamAggregatedQuoteResponseV2::InternalSwap(StreamAggregatedQuoteResponseV2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.aggregate_, lhs_arena,
      &other->_impl_.aggregate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instrument_class_, lhs_arena,
      &other->_impl_.instrument_class_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamAggregatedQuoteResponseV2, _impl_.event_type_)
      + sizeof(StreamAggregatedQuoteResponseV2::_impl_.event_type_)
      - PROTOBUF_FIELD_OFFSET(StreamAggregatedQuoteResponseV2, _impl_.ts_event_)>(
          reinterpret_cast<char*>(&_impl_.ts_event_),
          reinterpret_cast<char*>(&other->_impl_.ts_event_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamAggregatedQuoteResponseV2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_getter, &descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto_once,
      file_level_metadata_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kaikosdk::StreamAggregatedQuoteValue*
Arena::CreateMaybeMessage< ::kaikosdk::StreamAggregatedQuoteValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kaikosdk::StreamAggregatedQuoteValue >(arena);
}
template<> PROTOBUF_NOINLINE ::kaikosdk::StreamAggregatedQuoteResponseV2*
Arena::CreateMaybeMessage< ::kaikosdk::StreamAggregatedQuoteResponseV2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kaikosdk::StreamAggregatedQuoteResponseV2 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

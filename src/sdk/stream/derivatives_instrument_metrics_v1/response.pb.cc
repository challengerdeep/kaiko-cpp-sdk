// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/stream/derivatives_instrument_metrics_v1/response.proto

#include "sdk/stream/derivatives_instrument_metrics_v1/response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kaikosdk {
PROTOBUF_CONSTEXPR StreamDerivativesInstrumentMetricsResponseV1::StreamDerivativesInstrumentMetricsResponseV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.legacy_symbol_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.exchange_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.commodity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ts_collection_)*/nullptr
  , /*decltype(_impl_.ts_event_)*/nullptr
  , /*decltype(_impl_.commodity_kind_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamDerivativesInstrumentMetricsResponseV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamDerivativesInstrumentMetricsResponseV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamDerivativesInstrumentMetricsResponseV1DefaultTypeInternal() {}
  union {
    StreamDerivativesInstrumentMetricsResponseV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamDerivativesInstrumentMetricsResponseV1DefaultTypeInternal _StreamDerivativesInstrumentMetricsResponseV1_default_instance_;
}  // namespace kaikosdk
static ::_pb::Metadata file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto = nullptr;

const uint32_t TableStruct_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.legacy_symbol_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.exchange_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.commodity_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.commodity_kind_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.ts_collection_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1, _impl_.ts_event_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::kaikosdk::_StreamDerivativesInstrumentMetricsResponseV1_default_instance_._instance,
};

const char descriptor_table_protodef_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;sdk/stream/derivatives_instrument_metr"
  "ics_v1/response.proto\022\010kaikosdk\032\037google/"
  "protobuf/timestamp.proto\032Asdk/stream/der"
  "ivatives_instrument_metrics_v1/commodity"
  "_kind.proto\"\250\002\n,StreamDerivativesInstrum"
  "entMetricsResponseV1\022\r\n\005value\030\001 \001(\t\022\025\n\rl"
  "egacy_symbol\030\002 \001(\t\022\020\n\010exchange\030\003 \001(\t\022\021\n\t"
  "commodity\030\004 \001(\t\022L\n\016commodity_kind\030\005 \001(\0162"
  "4.kaikosdk.StreamDerivativesInstrumentCo"
  "mmodityKindV1\0221\n\rts_collection\030\006 \001(\0132\032.g"
  "oogle.protobuf.Timestamp\022,\n\010ts_event\030\007 \001"
  "(\0132\032.google.protobuf.TimestampB\331\001\n6com.k"
  "aiko.sdk.stream.derivatives_instrument_m"
  "etrics_v1P\001Zlgithub.com/kaikodata/kaiko-"
  "go-sdk/stream/derivatives_instrument_met"
  "rics_v1;derivatives_instrument_metrics_v"
  "1\252\002.KaikoSdk.Stream.DerivativesInstrumen"
  "tMetricsV1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fcommodity_5fkind_2eproto,
};
static ::_pbi::once_flag descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto = {
    false, false, 698, descriptor_table_protodef_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto,
    "sdk/stream/derivatives_instrument_metrics_v1/response.proto",
    &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_once, descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto::offsets,
    file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto, file_level_enum_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto,
    file_level_service_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_getter() {
  return &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto(&descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto);
namespace kaikosdk {

// ===================================================================

class StreamDerivativesInstrumentMetricsResponseV1::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& ts_collection(const StreamDerivativesInstrumentMetricsResponseV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& ts_event(const StreamDerivativesInstrumentMetricsResponseV1* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
StreamDerivativesInstrumentMetricsResponseV1::_Internal::ts_collection(const StreamDerivativesInstrumentMetricsResponseV1* msg) {
  return *msg->_impl_.ts_collection_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
StreamDerivativesInstrumentMetricsResponseV1::_Internal::ts_event(const StreamDerivativesInstrumentMetricsResponseV1* msg) {
  return *msg->_impl_.ts_event_;
}
void StreamDerivativesInstrumentMetricsResponseV1::clear_ts_collection() {
  if (GetArenaForAllocation() == nullptr && _impl_.ts_collection_ != nullptr) {
    delete _impl_.ts_collection_;
  }
  _impl_.ts_collection_ = nullptr;
}
void StreamDerivativesInstrumentMetricsResponseV1::clear_ts_event() {
  if (GetArenaForAllocation() == nullptr && _impl_.ts_event_ != nullptr) {
    delete _impl_.ts_event_;
  }
  _impl_.ts_event_ = nullptr;
}
StreamDerivativesInstrumentMetricsResponseV1::StreamDerivativesInstrumentMetricsResponseV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
}
StreamDerivativesInstrumentMetricsResponseV1::StreamDerivativesInstrumentMetricsResponseV1(const StreamDerivativesInstrumentMetricsResponseV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamDerivativesInstrumentMetricsResponseV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , decltype(_impl_.legacy_symbol_){}
    , decltype(_impl_.exchange_){}
    , decltype(_impl_.commodity_){}
    , decltype(_impl_.ts_collection_){nullptr}
    , decltype(_impl_.ts_event_){nullptr}
    , decltype(_impl_.commodity_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  _impl_.legacy_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.legacy_symbol_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_legacy_symbol().empty()) {
    _this->_impl_.legacy_symbol_.Set(from._internal_legacy_symbol(), 
      _this->GetArenaForAllocation());
  }
  _impl_.exchange_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.exchange_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_exchange().empty()) {
    _this->_impl_.exchange_.Set(from._internal_exchange(), 
      _this->GetArenaForAllocation());
  }
  _impl_.commodity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.commodity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_commodity().empty()) {
    _this->_impl_.commodity_.Set(from._internal_commodity(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_ts_collection()) {
    _this->_impl_.ts_collection_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.ts_collection_);
  }
  if (from._internal_has_ts_event()) {
    _this->_impl_.ts_event_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.ts_event_);
  }
  _this->_impl_.commodity_kind_ = from._impl_.commodity_kind_;
  // @@protoc_insertion_point(copy_constructor:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
}

inline void StreamDerivativesInstrumentMetricsResponseV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , decltype(_impl_.legacy_symbol_){}
    , decltype(_impl_.exchange_){}
    , decltype(_impl_.commodity_){}
    , decltype(_impl_.ts_collection_){nullptr}
    , decltype(_impl_.ts_event_){nullptr}
    , decltype(_impl_.commodity_kind_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.legacy_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.legacy_symbol_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.exchange_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.exchange_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.commodity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.commodity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamDerivativesInstrumentMetricsResponseV1::~StreamDerivativesInstrumentMetricsResponseV1() {
  // @@protoc_insertion_point(destructor:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamDerivativesInstrumentMetricsResponseV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
  _impl_.legacy_symbol_.Destroy();
  _impl_.exchange_.Destroy();
  _impl_.commodity_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ts_collection_;
  if (this != internal_default_instance()) delete _impl_.ts_event_;
}

void StreamDerivativesInstrumentMetricsResponseV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamDerivativesInstrumentMetricsResponseV1::Clear() {
// @@protoc_insertion_point(message_clear_start:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.legacy_symbol_.ClearToEmpty();
  _impl_.exchange_.ClearToEmpty();
  _impl_.commodity_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.ts_collection_ != nullptr) {
    delete _impl_.ts_collection_;
  }
  _impl_.ts_collection_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.ts_event_ != nullptr) {
    delete _impl_.ts_event_;
  }
  _impl_.ts_event_ = nullptr;
  _impl_.commodity_kind_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamDerivativesInstrumentMetricsResponseV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.value"));
        } else
          goto handle_unusual;
        continue;
      // string legacy_symbol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_legacy_symbol();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.legacy_symbol"));
        } else
          goto handle_unusual;
        continue;
      // string exchange = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_exchange();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.exchange"));
        } else
          goto handle_unusual;
        continue;
      // string commodity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_commodity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.commodity"));
        } else
          goto handle_unusual;
        continue;
      // .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodity_kind = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_commodity_kind(static_cast<::kaikosdk::StreamDerivativesInstrumentCommodityKindV1>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp ts_collection = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_ts_collection(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp ts_event = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_ts_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamDerivativesInstrumentMetricsResponseV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  // string legacy_symbol = 2;
  if (!this->_internal_legacy_symbol().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_legacy_symbol().data(), static_cast<int>(this->_internal_legacy_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.legacy_symbol");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_legacy_symbol(), target);
  }

  // string exchange = 3;
  if (!this->_internal_exchange().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange().data(), static_cast<int>(this->_internal_exchange().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.exchange");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_exchange(), target);
  }

  // string commodity = 4;
  if (!this->_internal_commodity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_commodity().data(), static_cast<int>(this->_internal_commodity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kaikosdk.StreamDerivativesInstrumentMetricsResponseV1.commodity");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_commodity(), target);
  }

  // .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodity_kind = 5;
  if (this->_internal_commodity_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_commodity_kind(), target);
  }

  // .google.protobuf.Timestamp ts_collection = 6;
  if (this->_internal_has_ts_collection()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::ts_collection(this),
        _Internal::ts_collection(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp ts_event = 7;
  if (this->_internal_has_ts_event()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::ts_event(this),
        _Internal::ts_event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  return target;
}

size_t StreamDerivativesInstrumentMetricsResponseV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string legacy_symbol = 2;
  if (!this->_internal_legacy_symbol().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_legacy_symbol());
  }

  // string exchange = 3;
  if (!this->_internal_exchange().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange());
  }

  // string commodity = 4;
  if (!this->_internal_commodity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_commodity());
  }

  // .google.protobuf.Timestamp ts_collection = 6;
  if (this->_internal_has_ts_collection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.ts_collection_);
  }

  // .google.protobuf.Timestamp ts_event = 7;
  if (this->_internal_has_ts_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.ts_event_);
  }

  // .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodity_kind = 5;
  if (this->_internal_commodity_kind() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_commodity_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamDerivativesInstrumentMetricsResponseV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamDerivativesInstrumentMetricsResponseV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamDerivativesInstrumentMetricsResponseV1::GetClassData() const { return &_class_data_; }


void StreamDerivativesInstrumentMetricsResponseV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamDerivativesInstrumentMetricsResponseV1*>(&to_msg);
  auto& from = static_cast<const StreamDerivativesInstrumentMetricsResponseV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_legacy_symbol().empty()) {
    _this->_internal_set_legacy_symbol(from._internal_legacy_symbol());
  }
  if (!from._internal_exchange().empty()) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  if (!from._internal_commodity().empty()) {
    _this->_internal_set_commodity(from._internal_commodity());
  }
  if (from._internal_has_ts_collection()) {
    _this->_internal_mutable_ts_collection()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_ts_collection());
  }
  if (from._internal_has_ts_event()) {
    _this->_internal_mutable_ts_event()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_ts_event());
  }
  if (from._internal_commodity_kind() != 0) {
    _this->_internal_set_commodity_kind(from._internal_commodity_kind());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamDerivativesInstrumentMetricsResponseV1::CopyFrom(const StreamDerivativesInstrumentMetricsResponseV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaikosdk.StreamDerivativesInstrumentMetricsResponseV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamDerivativesInstrumentMetricsResponseV1::IsInitialized() const {
  return true;
}

void StreamDerivativesInstrumentMetricsResponseV1::InternalSwap(StreamDerivativesInstrumentMetricsResponseV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.legacy_symbol_, lhs_arena,
      &other->_impl_.legacy_symbol_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.exchange_, lhs_arena,
      &other->_impl_.exchange_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.commodity_, lhs_arena,
      &other->_impl_.commodity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamDerivativesInstrumentMetricsResponseV1, _impl_.commodity_kind_)
      + sizeof(StreamDerivativesInstrumentMetricsResponseV1::_impl_.commodity_kind_)
      - PROTOBUF_FIELD_OFFSET(StreamDerivativesInstrumentMetricsResponseV1, _impl_.ts_collection_)>(
          reinterpret_cast<char*>(&_impl_.ts_collection_),
          reinterpret_cast<char*>(&other->_impl_.ts_collection_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamDerivativesInstrumentMetricsResponseV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_getter, &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto_once,
      file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1*
Arena::CreateMaybeMessage< ::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kaikosdk::StreamDerivativesInstrumentMetricsResponseV1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

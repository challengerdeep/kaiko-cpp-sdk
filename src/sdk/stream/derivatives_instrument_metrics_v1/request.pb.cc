// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/stream/derivatives_instrument_metrics_v1/request.proto

#include "sdk/stream/derivatives_instrument_metrics_v1/request.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kaikosdk {
PROTOBUF_CONSTEXPR StreamDerivativesInstrumentMetricsRequestV1::StreamDerivativesInstrumentMetricsRequestV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.commodities_)*/{}
  , /*decltype(_impl_._commodities_cached_byte_size_)*/{0}
  , /*decltype(_impl_.instrument_criteria_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamDerivativesInstrumentMetricsRequestV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamDerivativesInstrumentMetricsRequestV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamDerivativesInstrumentMetricsRequestV1DefaultTypeInternal() {}
  union {
    StreamDerivativesInstrumentMetricsRequestV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamDerivativesInstrumentMetricsRequestV1DefaultTypeInternal _StreamDerivativesInstrumentMetricsRequestV1_default_instance_;
}  // namespace kaikosdk
static ::_pb::Metadata file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto = nullptr;

const uint32_t TableStruct_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1, _impl_.instrument_criteria_),
  PROTOBUF_FIELD_OFFSET(::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1, _impl_.commodities_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::kaikosdk::_StreamDerivativesInstrumentMetricsRequestV1_default_instance_._instance,
};

const char descriptor_table_protodef_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n:sdk/stream/derivatives_instrument_metr"
  "ics_v1/request.proto\022\010kaikosdk\032\"sdk/core"
  "/instrument_criteria.proto\032Asdk/stream/d"
  "erivatives_instrument_metrics_v1/commodi"
  "ty_kind.proto\"\263\001\n+StreamDerivativesInstr"
  "umentMetricsRequestV1\0229\n\023instrument_crit"
  "eria\030\001 \001(\0132\034.kaikosdk.InstrumentCriteria"
  "\022I\n\013commodities\030\002 \003(\01624.kaikosdk.StreamD"
  "erivativesInstrumentCommodityKindV1B\331\001\n6"
  "com.kaiko.sdk.stream.derivatives_instrum"
  "ent_metrics_v1P\001Zlgithub.com/kaikodata/k"
  "aiko-go-sdk/stream/derivatives_instrumen"
  "t_metrics_v1;derivatives_instrument_metr"
  "ics_v1\252\002.KaikoSdk.Stream.DerivativesInst"
  "rumentMetricsV1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_deps[2] = {
  &::descriptor_table_sdk_2fcore_2finstrument_5fcriteria_2eproto,
  &::descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fcommodity_5fkind_2eproto,
};
static ::_pbi::once_flag descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto = {
    false, false, 583, descriptor_table_protodef_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto,
    "sdk/stream/derivatives_instrument_metrics_v1/request.proto",
    &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_once, descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto::offsets,
    file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto, file_level_enum_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto,
    file_level_service_descriptors_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_getter() {
  return &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto(&descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto);
namespace kaikosdk {

// ===================================================================

class StreamDerivativesInstrumentMetricsRequestV1::_Internal {
 public:
  static const ::kaikosdk::InstrumentCriteria& instrument_criteria(const StreamDerivativesInstrumentMetricsRequestV1* msg);
};

const ::kaikosdk::InstrumentCriteria&
StreamDerivativesInstrumentMetricsRequestV1::_Internal::instrument_criteria(const StreamDerivativesInstrumentMetricsRequestV1* msg) {
  return *msg->_impl_.instrument_criteria_;
}
void StreamDerivativesInstrumentMetricsRequestV1::clear_instrument_criteria() {
  if (GetArenaForAllocation() == nullptr && _impl_.instrument_criteria_ != nullptr) {
    delete _impl_.instrument_criteria_;
  }
  _impl_.instrument_criteria_ = nullptr;
}
StreamDerivativesInstrumentMetricsRequestV1::StreamDerivativesInstrumentMetricsRequestV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
}
StreamDerivativesInstrumentMetricsRequestV1::StreamDerivativesInstrumentMetricsRequestV1(const StreamDerivativesInstrumentMetricsRequestV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamDerivativesInstrumentMetricsRequestV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.commodities_){from._impl_.commodities_}
    , /*decltype(_impl_._commodities_cached_byte_size_)*/{0}
    , decltype(_impl_.instrument_criteria_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_instrument_criteria()) {
    _this->_impl_.instrument_criteria_ = new ::kaikosdk::InstrumentCriteria(*from._impl_.instrument_criteria_);
  }
  // @@protoc_insertion_point(copy_constructor:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
}

inline void StreamDerivativesInstrumentMetricsRequestV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.commodities_){arena}
    , /*decltype(_impl_._commodities_cached_byte_size_)*/{0}
    , decltype(_impl_.instrument_criteria_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StreamDerivativesInstrumentMetricsRequestV1::~StreamDerivativesInstrumentMetricsRequestV1() {
  // @@protoc_insertion_point(destructor:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamDerivativesInstrumentMetricsRequestV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.commodities_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.instrument_criteria_;
}

void StreamDerivativesInstrumentMetricsRequestV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamDerivativesInstrumentMetricsRequestV1::Clear() {
// @@protoc_insertion_point(message_clear_start:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commodities_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.instrument_criteria_ != nullptr) {
    delete _impl_.instrument_criteria_;
  }
  _impl_.instrument_criteria_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamDerivativesInstrumentMetricsRequestV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .kaikosdk.InstrumentCriteria instrument_criteria = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_instrument_criteria(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_commodities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_commodities(static_cast<::kaikosdk::StreamDerivativesInstrumentCommodityKindV1>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamDerivativesInstrumentMetricsRequestV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaikosdk.InstrumentCriteria instrument_criteria = 1;
  if (this->_internal_has_instrument_criteria()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::instrument_criteria(this),
        _Internal::instrument_criteria(this).GetCachedSize(), target, stream);
  }

  // repeated .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodities = 2;
  {
    int byte_size = _impl_._commodities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, _impl_.commodities_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  return target;
}

size_t StreamDerivativesInstrumentMetricsRequestV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kaikosdk.StreamDerivativesInstrumentCommodityKindV1 commodities = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_commodities_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_commodities(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._commodities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .kaikosdk.InstrumentCriteria instrument_criteria = 1;
  if (this->_internal_has_instrument_criteria()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.instrument_criteria_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamDerivativesInstrumentMetricsRequestV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamDerivativesInstrumentMetricsRequestV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamDerivativesInstrumentMetricsRequestV1::GetClassData() const { return &_class_data_; }


void StreamDerivativesInstrumentMetricsRequestV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamDerivativesInstrumentMetricsRequestV1*>(&to_msg);
  auto& from = static_cast<const StreamDerivativesInstrumentMetricsRequestV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.commodities_.MergeFrom(from._impl_.commodities_);
  if (from._internal_has_instrument_criteria()) {
    _this->_internal_mutable_instrument_criteria()->::kaikosdk::InstrumentCriteria::MergeFrom(
        from._internal_instrument_criteria());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamDerivativesInstrumentMetricsRequestV1::CopyFrom(const StreamDerivativesInstrumentMetricsRequestV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaikosdk.StreamDerivativesInstrumentMetricsRequestV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamDerivativesInstrumentMetricsRequestV1::IsInitialized() const {
  return true;
}

void StreamDerivativesInstrumentMetricsRequestV1::InternalSwap(StreamDerivativesInstrumentMetricsRequestV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.commodities_.InternalSwap(&other->_impl_.commodities_);
  swap(_impl_.instrument_criteria_, other->_impl_.instrument_criteria_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamDerivativesInstrumentMetricsRequestV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_getter, &descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto_once,
      file_level_metadata_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1*
Arena::CreateMaybeMessage< ::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kaikosdk::StreamDerivativesInstrumentMetricsRequestV1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

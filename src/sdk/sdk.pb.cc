// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/sdk.proto

#include "sdk/sdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kaikosdk {
}  // namespace kaikosdk
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sdk_2fsdk_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sdk_2fsdk_2eproto = nullptr;
const uint32_t TableStruct_sdk_2fsdk_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_sdk_2fsdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rsdk/sdk.proto\022\010kaikosdk\032,sdk/stream/ag"
  "gregated_price_v1/request.proto\032-sdk/str"
  "eam/aggregated_price_v1/response.proto\032,"
  "sdk/stream/aggregated_quote_v2/request.p"
  "roto\032-sdk/stream/aggregated_quote_v2/res"
  "ponse.proto\032;sdk/stream/aggregates_direc"
  "t_exchange_rate_v2/request.proto\032<sdk/st"
  "ream/aggregates_direct_exchange_rate_v2/"
  "response.proto\032,sdk/stream/aggregates_oh"
  "lcv_v1/request.proto\032-sdk/stream/aggrega"
  "tes_ohlcv_v1/response.proto\0329sdk/stream/"
  "aggregates_spot_exchange_rate_v2/request"
  ".proto\032:sdk/stream/aggregates_spot_excha"
  "nge_rate_v2/response.proto\032+sdk/stream/a"
  "ggregates_vwap_v1/request.proto\032,sdk/str"
  "eam/aggregates_vwap_v1/response.proto\032:s"
  "dk/stream/derivatives_instrument_metrics"
  "_v1/request.proto\032;sdk/stream/derivative"
  "s_instrument_metrics_v1/response.proto\032*"
  "sdk/stream/exotic_indices_v1/request.pro"
  "to\032+sdk/stream/exotic_indices_v1/respons"
  "e.proto\032,sdk/stream/index_forex_rate_v1/"
  "request.proto\032-sdk/stream/index_forex_ra"
  "te_v1/response.proto\032.sdk/stream/index_m"
  "ulti_assets_v1/request.proto\032/sdk/stream"
  "/index_multi_assets_v1/response.proto\032!s"
  "dk/stream/index_v1/request.proto\032\"sdk/st"
  "ream/index_v1/response.proto\032-sdk/stream"
  "/iv_svi_parameters_v1/request.proto\032.sdk"
  "/stream/iv_svi_parameters_v1/response.pr"
  "oto\032)sdk/stream/market_update_v1/request"
  ".proto\032*sdk/stream/market_update_v1/resp"
  "onse.proto\032\"sdk/stream/trades_v1/request"
  ".proto\032#sdk/stream/trades_v1/response.pr"
  "oto\0322sdk/stream/aggregated_state_price_v"
  "1/request.proto\0323sdk/stream/aggregated_s"
  "tate_price_v1/response.proto2\206\001\n\036StreamA"
  "ggregatedQuoteServiceV2\022d\n\tSubscribe\022(.k"
  "aikosdk.StreamAggregatedQuoteRequestV2\032)"
  ".kaikosdk.StreamAggregatedQuoteResponseV"
  "2\"\0000\0012\211\001\n\036StreamAggregatedPriceServiceV1"
  "\022g\n\tSubscribe\022(.kaikosdk.StreamAggregate"
  "dPriceRequestV1\032).kaikosdk.StreamAggrega"
  "tedPriceResponseV1\"\003\210\002\0010\0012\206\001\n\036StreamAggr"
  "egatesOHLCVServiceV1\022d\n\tSubscribe\022(.kaik"
  "osdk.StreamAggregatesOHLCVRequestV1\032).ka"
  "ikosdk.StreamAggregatesOHLCVResponseV1\"\000"
  "0\0012k\n\025StreamTradesServiceV1\022R\n\tSubscribe"
  "\022\037.kaikosdk.StreamTradesRequestV1\032 .kaik"
  "osdk.StreamTradesResponseV1\"\0000\0012\203\001\n\035Stre"
  "amAggregatesVWAPServiceV1\022b\n\tSubscribe\022\'"
  ".kaikosdk.StreamAggregatesVWAPRequestV1\032"
  "(.kaikosdk.StreamAggregatesVWAPResponseV"
  "1\"\0000\0012v\n\024StreamIndexServiceV1\022^\n\tSubscri"
  "be\022%.kaikosdk.StreamIndexServiceRequestV"
  "1\032&.kaikosdk.StreamIndexServiceResponseV"
  "1\"\0000\0012\227\001\n\037StreamIndexMultiAssetsServiceV"
  "1\022t\n\tSubscribe\0220.kaikosdk.StreamIndexMul"
  "tiAssetsServiceRequestV1\0321.kaikosdk.Stre"
  "amIndexMultiAssetsServiceResponseV1\"\0000\0012"
  "}\n\033StreamMarketUpdateServiceV1\022^\n\tSubscr"
  "ibe\022%.kaikosdk.StreamMarketUpdateRequest"
  "V1\032&.kaikosdk.StreamMarketUpdateResponse"
  "V1\"\0000\0012\255\001\n+StreamAggregatesSpotExchangeR"
  "ateV2ServiceV1\022~\n\tSubscribe\0225.kaikosdk.S"
  "treamAggregatesSpotExchangeRateV2Request"
  "V1\0326.kaikosdk.StreamAggregatesSpotExchan"
  "geRateV2ResponseV1\"\0000\0012\270\001\n1StreamAggrega"
  "tesSpotDirectExchangeRateV2ServiceV1\022\202\001\n"
  "\tSubscribe\0227.kaikosdk.StreamAggregatesDi"
  "rectExchangeRateV2RequestV1\0328.kaikosdk.S"
  "treamAggregatesDirectExchangeRateV2Respo"
  "nseV1\"\0000\0012\221\001\n\035StreamIndexForexRateServic"
  "eV1\022p\n\tSubscribe\022..kaikosdk.StreamIndexF"
  "orexRateServiceRequestV1\032/.kaikosdk.Stre"
  "amIndexForexRateServiceResponseV1\"\0000\0012\255\001"
  "\n+StreamDerivativesInstrumentMetricsServ"
  "iceV1\022~\n\tSubscribe\0225.kaikosdk.StreamDeri"
  "vativesInstrumentMetricsRequestV1\0326.kaik"
  "osdk.StreamDerivativesInstrumentMetricsR"
  "esponseV1\"\0000\0012\206\001\n\036StreamIvSviParametersS"
  "erviceV1\022d\n\tSubscribe\022(.kaikosdk.StreamI"
  "vSviParametersRequestV1\032).kaikosdk.Strea"
  "mIvSviParametersResponseV1\"\0000\0012\216\001\n\034Strea"
  "mExoticIndicesServiceV1\022n\n\tSubscribe\022-.k"
  "aikosdk.StreamExoticIndicesServiceReques"
  "tV1\032..kaikosdk.StreamExoticIndicesServic"
  "eResponseV1\"\0000\0012\225\001\n#StreamAggregatedStat"
  "ePriceServiceV1\022n\n\tSubscribe\022-.kaikosdk."
  "StreamAggregatedStatePriceRequestV1\032..ka"
  "ikosdk.StreamAggregatedStatePriceRespons"
  "eV1\"\0000\001BR\n\rcom.kaiko.sdkB\010SdkProtoP\001Z*gi"
  "thub.com/kaikodata/kaiko-go-sdk;kaikosdk"
  "\252\002\010KaikoSdkb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2fsdk_2eproto_deps[30] = {
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fstate_5fprice_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fstate_5fprice_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fdirect_5fexchange_5frate_5fv2_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fdirect_5fexchange_5frate_5fv2_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fspot_5fexchange_5frate_5fv2_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fspot_5fexchange_5frate_5fv2_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fderivatives_5finstrument_5fmetrics_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fexotic_5findices_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fexotic_5findices_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fforex_5frate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fforex_5frate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fmulti_5fassets_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fmulti_5fassets_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fiv_5fsvi_5fparameters_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fiv_5fsvi_5fparameters_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2fresponse_2eproto,
};
static ::_pbi::once_flag descriptor_table_sdk_2fsdk_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sdk_2fsdk_2eproto = {
    false, false, 3739, descriptor_table_protodef_sdk_2fsdk_2eproto,
    "sdk/sdk.proto",
    &descriptor_table_sdk_2fsdk_2eproto_once, descriptor_table_sdk_2fsdk_2eproto_deps, 30, 0,
    schemas, file_default_instances, TableStruct_sdk_2fsdk_2eproto::offsets,
    nullptr, file_level_enum_descriptors_sdk_2fsdk_2eproto,
    file_level_service_descriptors_sdk_2fsdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sdk_2fsdk_2eproto_getter() {
  return &descriptor_table_sdk_2fsdk_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sdk_2fsdk_2eproto(&descriptor_table_sdk_2fsdk_2eproto);
namespace kaikosdk {

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

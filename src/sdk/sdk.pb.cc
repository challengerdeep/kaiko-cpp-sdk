// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/sdk.proto

#include "sdk/sdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace kaikosdk {
}  // namespace kaikosdk
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sdk_2fsdk_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sdk_2fsdk_2eproto = nullptr;
const uint32_t TableStruct_sdk_2fsdk_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_sdk_2fsdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rsdk/sdk.proto\022\010kaikosdk\032,sdk/stream/ag"
  "gregated_price_v1/request.proto\032-sdk/str"
  "eam/aggregated_price_v1/response.proto\032,"
  "sdk/stream/aggregates_ohlcv_v1/request.p"
  "roto\032-sdk/stream/aggregates_ohlcv_v1/res"
  "ponse.proto\032+sdk/stream/aggregates_vwap_"
  "v1/request.proto\032,sdk/stream/aggregates_"
  "vwap_v1/response.proto\032;sdk/stream/aggre"
  "gates_direct_exchange_rate_v1/request.pr"
  "oto\032<sdk/stream/aggregates_direct_exchan"
  "ge_rate_v1/response.proto\0329sdk/stream/ag"
  "gregates_spot_exchange_rate_v1/request.p"
  "roto\032:sdk/stream/aggregates_spot_exchang"
  "e_rate_v1/response.proto\032!sdk/stream/ind"
  "ex_v1/request.proto\032\"sdk/stream/index_v1"
  "/response.proto\032)sdk/stream/market_updat"
  "e_v1/request.proto\032*sdk/stream/market_up"
  "date_v1/response.proto\032\"sdk/stream/trade"
  "s_v1/request.proto\032#sdk/stream/trades_v1"
  "/response.proto2\206\001\n\036StreamAggregatedPric"
  "eServiceV1\022d\n\tSubscribe\022(.kaikosdk.Strea"
  "mAggregatedPriceRequestV1\032).kaikosdk.Str"
  "eamAggregatedPriceResponseV1\"\0000\0012\206\001\n\036Str"
  "eamAggregatesOHLCVServiceV1\022d\n\tSubscribe"
  "\022(.kaikosdk.StreamAggregatesOHLCVRequest"
  "V1\032).kaikosdk.StreamAggregatesOHLCVRespo"
  "nseV1\"\0000\0012\247\001\n)StreamAggregatesSpotExchan"
  "geRateServiceV1\022z\n\tSubscribe\0223.kaikosdk."
  "StreamAggregatesSpotExchangeRateRequestV"
  "1\0324.kaikosdk.StreamAggregatesSpotExchang"
  "eRateResponseV1\"\0000\0012\255\001\n+StreamAggregates"
  "DirectExchangeRateServiceV1\022~\n\tSubscribe"
  "\0225.kaikosdk.StreamAggregatesDirectExchan"
  "geRateRequestV1\0326.kaikosdk.StreamAggrega"
  "tesDirectExchangeRateResponseV1\"\0000\0012k\n\025S"
  "treamTradesServiceV1\022R\n\tSubscribe\022\037.kaik"
  "osdk.StreamTradesRequestV1\032 .kaikosdk.St"
  "reamTradesResponseV1\"\0000\0012\203\001\n\035StreamAggre"
  "gatesVWAPServiceV1\022b\n\tSubscribe\022\'.kaikos"
  "dk.StreamAggregatesVWAPRequestV1\032(.kaiko"
  "sdk.StreamAggregatesVWAPResponseV1\"\0000\0012v"
  "\n\024StreamIndexServiceV1\022^\n\tSubscribe\022%.ka"
  "ikosdk.StreamIndexServiceRequestV1\032&.kai"
  "kosdk.StreamIndexServiceResponseV1\"\0000\0012}"
  "\n\033StreamMarketUpdateServiceV1\022^\n\tSubscri"
  "be\022%.kaikosdk.StreamMarketUpdateRequestV"
  "1\032&.kaikosdk.StreamMarketUpdateResponseV"
  "1\"\0000\001BR\n\rcom.kaiko.sdkB\010SdkProtoP\001Z*gith"
  "ub.com/kaikodata/kaiko-go-sdk;kaikosdk\252\002"
  "\010KaikoSdkb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sdk_2fsdk_2eproto_deps[16] = {
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fdirect_5fexchange_5frate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fdirect_5fexchange_5frate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fspot_5fexchange_5frate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fspot_5fexchange_5frate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2fresponse_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sdk_2fsdk_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sdk_2fsdk_2eproto = {
  false, false, 1977, descriptor_table_protodef_sdk_2fsdk_2eproto, "sdk/sdk.proto", 
  &descriptor_table_sdk_2fsdk_2eproto_once, descriptor_table_sdk_2fsdk_2eproto_deps, 16, 0,
  schemas, file_default_instances, TableStruct_sdk_2fsdk_2eproto::offsets,
  nullptr, file_level_enum_descriptors_sdk_2fsdk_2eproto, file_level_service_descriptors_sdk_2fsdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_sdk_2fsdk_2eproto_getter() {
  return &descriptor_table_sdk_2fsdk_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_sdk_2fsdk_2eproto(&descriptor_table_sdk_2fsdk_2eproto);
namespace kaikosdk {

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

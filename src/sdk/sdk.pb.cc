// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk/sdk.proto

#include "sdk/sdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kaikosdk {
}  // namespace kaikosdk
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sdk_2fsdk_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sdk_2fsdk_2eproto = nullptr;
const uint32_t TableStruct_sdk_2fsdk_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_sdk_2fsdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rsdk/sdk.proto\022\010kaikosdk\032,sdk/stream/ag"
  "gregated_price_v1/request.proto\032-sdk/str"
  "eam/aggregated_price_v1/response.proto\032,"
  "sdk/stream/aggregated_quote_v2/request.p"
  "roto\032-sdk/stream/aggregated_quote_v2/res"
  "ponse.proto\032,sdk/stream/aggregates_ohlcv"
  "_v1/request.proto\032-sdk/stream/aggregates"
  "_ohlcv_v1/response.proto\032+sdk/stream/agg"
  "regates_vwap_v1/request.proto\032,sdk/strea"
  "m/aggregates_vwap_v1/response.proto\032!sdk"
  "/stream/index_v1/request.proto\032\"sdk/stre"
  "am/index_v1/response.proto\032.sdk/stream/i"
  "ndex_multi_assets_v1/request.proto\032/sdk/"
  "stream/index_multi_assets_v1/response.pr"
  "oto\032,sdk/stream/index_forex_rate_v1/requ"
  "est.proto\032-sdk/stream/index_forex_rate_v"
  "1/response.proto\032)sdk/stream/market_upda"
  "te_v1/request.proto\032*sdk/stream/market_u"
  "pdate_v1/response.proto\032\"sdk/stream/trad"
  "es_v1/request.proto\032#sdk/stream/trades_v"
  "1/response.proto2\206\001\n\036StreamAggregatedQuo"
  "teServiceV2\022d\n\tSubscribe\022(.kaikosdk.Stre"
  "amAggregatedQuoteRequestV2\032).kaikosdk.St"
  "reamAggregatedQuoteResponseV2\"\0000\0012\211\001\n\036St"
  "reamAggregatedPriceServiceV1\022g\n\tSubscrib"
  "e\022(.kaikosdk.StreamAggregatedPriceReques"
  "tV1\032).kaikosdk.StreamAggregatedPriceResp"
  "onseV1\"\003\210\002\0010\0012\206\001\n\036StreamAggregatesOHLCVS"
  "erviceV1\022d\n\tSubscribe\022(.kaikosdk.StreamA"
  "ggregatesOHLCVRequestV1\032).kaikosdk.Strea"
  "mAggregatesOHLCVResponseV1\"\0000\0012k\n\025Stream"
  "TradesServiceV1\022R\n\tSubscribe\022\037.kaikosdk."
  "StreamTradesRequestV1\032 .kaikosdk.StreamT"
  "radesResponseV1\"\0000\0012\203\001\n\035StreamAggregates"
  "VWAPServiceV1\022b\n\tSubscribe\022\'.kaikosdk.St"
  "reamAggregatesVWAPRequestV1\032(.kaikosdk.S"
  "treamAggregatesVWAPResponseV1\"\0000\0012v\n\024Str"
  "eamIndexServiceV1\022^\n\tSubscribe\022%.kaikosd"
  "k.StreamIndexServiceRequestV1\032&.kaikosdk"
  ".StreamIndexServiceResponseV1\"\0000\0012\227\001\n\037St"
  "reamIndexMultiAssetsServiceV1\022t\n\tSubscri"
  "be\0220.kaikosdk.StreamIndexMultiAssetsServ"
  "iceRequestV1\0321.kaikosdk.StreamIndexMulti"
  "AssetsServiceResponseV1\"\0000\0012}\n\033StreamMar"
  "ketUpdateServiceV1\022^\n\tSubscribe\022%.kaikos"
  "dk.StreamMarketUpdateRequestV1\032&.kaikosd"
  "k.StreamMarketUpdateResponseV1\"\0000\0012\221\001\n\035S"
  "treamIndexForexRateServiceV1\022p\n\tSubscrib"
  "e\022..kaikosdk.StreamIndexForexRateService"
  "RequestV1\032/.kaikosdk.StreamIndexForexRat"
  "eServiceResponseV1\"\0000\001BR\n\rcom.kaiko.sdkB"
  "\010SdkProtoP\001Z*github.com/kaikodata/kaiko-"
  "go-sdk;kaikosdk\252\002\010KaikoSdkb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2fsdk_2eproto_deps[18] = {
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fprice_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregated_5fquote_5fv2_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fohlcv_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2faggregates_5fvwap_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fforex_5frate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fforex_5frate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fmulti_5fassets_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fmulti_5fassets_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2findex_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2fmarket_5fupdate_5fv1_2fresponse_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2frequest_2eproto,
  &::descriptor_table_sdk_2fstream_2ftrades_5fv1_2fresponse_2eproto,
};
static ::_pbi::once_flag descriptor_table_sdk_2fsdk_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sdk_2fsdk_2eproto = {
    false, false, 2114, descriptor_table_protodef_sdk_2fsdk_2eproto,
    "sdk/sdk.proto",
    &descriptor_table_sdk_2fsdk_2eproto_once, descriptor_table_sdk_2fsdk_2eproto_deps, 18, 0,
    schemas, file_default_instances, TableStruct_sdk_2fsdk_2eproto::offsets,
    nullptr, file_level_enum_descriptors_sdk_2fsdk_2eproto,
    file_level_service_descriptors_sdk_2fsdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sdk_2fsdk_2eproto_getter() {
  return &descriptor_table_sdk_2fsdk_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sdk_2fsdk_2eproto(&descriptor_table_sdk_2fsdk_2eproto);
namespace kaikosdk {

// @@protoc_insertion_point(namespace_scope)
}  // namespace kaikosdk
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
